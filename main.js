(function()%7Bvar MixedCipher %3D %2F** %40class *%2F (function () %7Bfunction MixedCipher() %7B%7DMixedCipher.rBackwards %3D function (message%2C key%2C code) %7Bcode %3D code.toLowerCase()%3Bkey %3D key.toUpperCase()%3Bif ( %2F* valueOf *%2FString(code.charAt(0)).toString() %3D%3D%3D ("e")) %7Bmessage %3D MixedCipher.encrypt(message%2C key)%3B%7DMixedCipher.finalMessage %3D ""%3Bfor (var i %3D message.length%3B i >%3D 1%3B --i) %7B%7BMixedCipher.ch %3D message.charAt(MixedCipher.valueAt)%3Bif (i %25 2 %3D%3D%3D 1 %7C%7C i %3D%3D%3D 1) %7BMixedCipher.ch %3D String.fromCharCode((MixedCipher.ch).charCodeAt(0) %2B i)%3B%7Delse %7BMixedCipher.ch %3D String.fromCharCode((MixedCipher.ch).charCodeAt(0) - i)%3B%7DMixedCipher.valueAt %2B%3D 1%3BMixedCipher.finalMessage %2B%3D MixedCipher.ch%3B%7D%3B%7DMixedCipher.valueAt %3D 0%3Bif ( %2F* valueOf *%2FString(code.charAt(0)).toString() %3D%3D%3D ("d")) %7BMixedCipher.finalMessage %3D MixedCipher.decrypt(MixedCipher.finalMessage%2C key)%3B%7Dreturn MixedCipher.finalMessage%3B%7D%3BMixedCipher.Backwards %3D function (message%2C key%2C code) %7Bcode %3D code.toLowerCase()%3Bkey %3D key.toUpperCase()%3Bif ( %2F* valueOf *%2FString(code.charAt(0)).toString() %3D%3D%3D ("e")) %7Bmessage %3D MixedCipher.encrypt(message%2C key)%3B%7DMixedCipher.finalMessage %3D ""%3Bfor (var i %3D message.length%3B i >%3D 1%3B --i) %7B%7BMixedCipher.ch %3D message.charAt(MixedCipher.valueAt)%3Bif (i %25 2 %3D%3D%3D 1 %7C%7C i %3D%3D%3D 1) %7BMixedCipher.ch %3D String.fromCharCode((MixedCipher.ch).charCodeAt(0) - i)%3B%7Delse %7BMixedCipher.ch %3D String.fromCharCode((MixedCipher.ch).charCodeAt(0) %2B i)%3B%7DMixedCipher.valueAt %2B%3D 1%3BMixedCipher.finalMessage %2B%3D MixedCipher.ch%3B%7D%3B%7DMixedCipher.valueAt %3D 0%3Bif ( %2F* valueOf *%2FString(code.charAt(0)).toString() %3D%3D%3D ("d")) %7BMixedCipher.finalMessage %3D MixedCipher.decrypt(MixedCipher.finalMessage%2C key)%3B%7Dreturn MixedCipher.finalMessage%3B%7D%3BMixedCipher.Forwards %3D function (message%2C key%2C code) %7Bcode %3D code.toLowerCase()%3Bkey %3D key.toUpperCase()%3Bif ( %2F* valueOf *%2FString(code.charAt(0)).toString() %3D%3D%3D ("e")) %7Bmessage %3D MixedCipher.encrypt(message%2C key)%3B%7DMixedCipher.finalMessage %3D ""%3Bfor (var i %3D 1%3B i <%3D message.length%3B %2B%2Bi) %7B%7BMixedCipher.ch %3D message.charAt(MixedCipher.valueAt)%3Bif (i %25 2 %3D%3D%3D 1 %7C%7C i %3D%3D%3D 1) %7BMixedCipher.ch %3D String.fromCharCode((MixedCipher.ch).charCodeAt(0) %2B i)%3B%7Delse %7BMixedCipher.ch %3D String.fromCharCode((MixedCipher.ch).charCodeAt(0) - i)%3B%7DMixedCipher.valueAt %2B%3D 1%3BMixedCipher.finalMessage %2B%3D MixedCipher.ch%3B%7D%3B%7DMixedCipher.valueAt %3D 0%3Bif ( %2F* valueOf *%2FString(code.charAt(0)).toString() %3D%3D%3D ("d")) %7BMixedCipher.finalMessage %3D MixedCipher.decrypt(MixedCipher.finalMessage%2C key)%3B%7Dreturn MixedCipher.finalMessage%3B%7D%3BMixedCipher.rForwards %3D function (message%2C key%2C code) %7Bcode %3D code.toLowerCase()%3Bkey %3D key.toUpperCase()%3Bif ( %2F* valueOf *%2FString(code.charAt(0)).toString() %3D%3D%3D ("e")) %7Bmessage %3D MixedCipher.encrypt(message%2C key)%3B%7DMixedCipher.finalMessage %3D ""%3Bfor (var i %3D 1%3B i <%3D message.length%3B %2B%2Bi) %7B%7BMixedCipher.ch %3D message.charAt(MixedCipher.valueAt)%3Bif (i %25 2 %3D%3D%3D 1 %7C%7C i %3D%3D%3D 1) %7BMixedCipher.ch %3D String.fromCharCode((MixedCipher.ch).charCodeAt(0) - i)%3B%7Delse %7BMixedCipher.ch %3D String.fromCharCode((MixedCipher.ch).charCodeAt(0) %2B i)%3B%7DMixedCipher.valueAt %2B%3D 1%3BMixedCipher.finalMessage %2B%3D MixedCipher.ch%3B%7D%3B%7DMixedCipher.valueAt %3D 0%3Bif ( %2F* valueOf *%2FString(code.charAt(0)).toString() %3D%3D%3D ("d")) %7BMixedCipher.finalMessage %3D MixedCipher.decrypt(MixedCipher.finalMessage%2C key)%3B%7Dreturn MixedCipher.finalMessage%3B%7D%3BMixedCipher.getMessage %3D function () %7Breturn MixedCipher.finalMessage%3B%7D%3BMixedCipher.setMessage %3D function (message) %7Bmessage %3D MixedCipher.finalMessage%3Breturn message%3B%7D%3BMixedCipher.resetMessage %3D function () %7Breturn MixedCipher.finalMessage %3D ""%3B%7D%3BMixedCipher.encrypt %3D function (text%2C key) %7Bvar res %3D ""%3Btext %3D text.toUpperCase()%3Bfor (var i %3D 0%2C j %3D 0%3B i < text.length%3B i%2B%2B) %7B%7Bvar c %3D text.charAt(i)%3Bif ((function (c) %7B return c.charCodeAt %3D%3D null %3F c %3A c.charCodeAt(0)%3B %7D)(c) < 'A'.charCodeAt(0) %7C%7C (function (c) %7B return c.charCodeAt %3D%3D null %3F c %3A c.charCodeAt(0)%3B %7D)(c) > 'Z'.charCodeAt(0))continue%3Bres %2B%3D String.fromCharCode((((function (c) %7B return c.charCodeAt %3D%3D null %3F c %3A c.charCodeAt(0)%3B %7D)(c) %2B (function (c) %7B return c.charCodeAt %3D%3D null %3F c %3A c.charCodeAt(0)%3B %7D)(key.charAt(j)) - 2 * 'A'.charCodeAt(0)) %25 26 %2B 'A'.charCodeAt(0)))%3Bj %3D %2B%2Bj %25 key.length%3B%7D%3B%7Dreturn res%3B%7D%3BMixedCipher.decrypt %3D function (text%2C key) %7Bvar res %3D ""%3Btext %3D text.toUpperCase()%3Bfor (var i %3D 0%2C j %3D 0%3B i < text.length%3B i%2B%2B) %7B%7Bvar c %3D text.charAt(i)%3Bif ((function (c) %7B return c.charCodeAt %3D%3D null %3F c %3A c.charCodeAt(0)%3B %7D)(c) < 'A'.charCodeAt(0) %7C%7C (function (c) %7B return c.charCodeAt %3D%3D null %3F c %3A c.charCodeAt(0)%3B %7D)(c) > 'Z'.charCodeAt(0))continue%3Bres %2B%3D String.fromCharCode((((function (c) %7B return c.charCodeAt %3D%3D null %3F c %3A c.charCodeAt(0)%3B %7D)(c) - (function (c) %7B return c.charCodeAt %3D%3D null %3F c %3A c.charCodeAt(0)%3B %7D)(key.charAt(j)) %2B 26) %25 26 %2B 'A'.charCodeAt(0)))%3Bj %3D %2B%2Bj %25 key.length%3B%7D%3B%7Dreturn res%3B%7D%3BMixedCipher.ch %3D null%3BMixedCipher.valueAt %3D 0%3BMixedCipher.finalMessage %3D ""%3Breturn MixedCipher%3B%7D())%3BMixedCipher%5B"__class"%5D %3D "MixedCipher"%3Blet mssg %3D prompt('Please enter message'%2C'')%3Blet mode %3D prompt('please select mode rb%2Fb%2Ff%2Frf')%3Blet eord %3D prompt('Encode or Decode%3F'%2C'')%3Blet ky %3D prompt('Please enter key'%2C'')%3Bif (mode %3D%3D%3D 'rb')%7Balert(MixedCipher.rBackwards(mssg%2Cky%2Ceord))%3B%7Dif (mode %3D%3D%3D 'b')%7Balert(MixedCipher.Backwards(mssg%2Cky%2Ceord))%3B%7Dif (mode %3D%3D%3D 'f')%7Balert(MixedCipher.Forwards(mssg%2Cky%2Ceord))%3B%7Dif (mode %3D%3D%3D 'rf')%7Balert(MixedCipher.rForwards(mssg%2Cky%2Ceord))%3B%7D%7D)()
